{
	"info": {
		"_postman_id": "96c2fa23-6363-4622-a06f-87d673f3c087",
		"name": "Automation Reqresin Cohort 3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetListUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL2}}/users",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSingleUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const dataJSON = pm.response.json();\r",
							"console.log(dataJSON);\r",
							"console.log('id = ' + dataJSON.data.id);\r",
							"console.log('email = ' + dataJSON.data.email);\r",
							"console.log('first_name = ' + dataJSON.data.first_name);\r",
							"console.log('last_name = ' + dataJSON.data.last_name);\r",
							"console.log('avatar = ' + dataJSON.data.avatar);\r",
							"console.log('url = ' + dataJSON.support.url);\r",
							"console.log('text = ' + dataJSON.support.text);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL2}}/users/:id",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single-Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL2}}/users/:id",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "23"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List (Resource)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL2}}/unknown",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single (Resource)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL2}}/unknown/:id",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"unknown",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "id"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single (Resource) Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL2}}/unknown/:id",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"unknown",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "23"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const dataJSON = pm.response.json();\r",
							"const IDJSON = dataJSON.id;\r",
							"pm.environment.set(\"idReqres\", IDJSON);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"job\": \"{{$randomJobTitle}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL2}}/users",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateUser_",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"ganjar\",\r\n    \"job\": \"qa engineer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL2}}/users/:id",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idReqres}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateUser__",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"sayogo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL2}}/users/:id",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idReqres}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL2}}/users/:id",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idReqres}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "RegisterSuccesful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const dataJSON = pm.response.json();\r",
							"const IDJSON = dataJSON.id;\r",
							"pm.environment.set(\"idReqres2\", IDJSON);\r",
							"\r",
							"const dataJSON2 = pm.response.json();\r",
							"const IDJSON2 = dataJSON2.token;\r",
							"pm.environment.set(\"tokenReqres\", IDJSON2);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL2}}/register",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "RegisterUnsuccesful",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"sydney@fife\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL2}}/register",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginSuccesful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const dataJSON = pm.response.json();\r",
							"const TokenJSON = dataJSON.token;\r",
							"pm.environment.set(\"TokenReqres\", TokenJSON);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL2}}/login",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginUnsuccesful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"const dataJSON = pm.response.json();\r",
							"const TokenJSON = dataJSON.token;\r",
							"pm.environment.set(\"TokenReqres\", TokenJSON);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL2}}/login",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "DelayedResponse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL2}}/users?delay=3",
					"host": [
						"{{baseURL2}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "3"
						}
					]
				}
			},
			"response": []
		}
	]
}